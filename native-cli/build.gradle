buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
//    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
}

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'build/genresource']
        }
    }
}


mainClassName = 'org.mule.weave.dwnative.cli.DataWeaveCLI'


dependencies {
    compile group: 'org.mule.weave', name: 'runtime', version: weaveVersion
    compile group: 'org.graalvm.sdk', name: 'graal-sdk', version: '1.0.0-rc12'
    compile group: 'org.mule.weave', name: 'core-modules', version: weaveVersion
    compile group: 'org.mule.weave', name: 'yaml-module', version: weaveVersion
    compile group: 'org.mule.weave', name: 'http-module', version: ioVersion
    compile(group: 'org.mule.weave', name: 'http-netty-module', version: ioVersion) {
        exclude group: 'org.slf4j'
    }
    compile group: 'org.mule.weave', name: 'ndjson-module', version: weaveVersion
    testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: scalaTestVersion
}

ext {
    aws = [
            accessKey: System.getenv("AWS_ACCESS_KEY_ID"),
            secretKey: System.getenv("AWS_SECRET_KEY")
    ]
}


def genDirectory = new File("$project.buildDir/genresource")


task genVersions() {
    println("Generating Versions File.")
    def componentVersion = new File(genDirectory, "org/mule/weave/v2/version/ComponentVersion.scala")
    def parentFile = componentVersion.getParentFile()
    if (!parentFile.exists()) {
        parentFile.mkdirs()
    }
    final PrintWriter outputPrinter = new PrintWriter(new FileWriter(componentVersion))

    outputPrinter.println("package org.mule.weave.v2.version")
    outputPrinter.println()
    outputPrinter.println("object ComponentVersion {")
    outputPrinter.println("\tval weaveVersion = \"" + weaveVersion + "\"")
    outputPrinter.println("\tval nativeVersion = \"" + nativeVersion + "\"")
    outputPrinter.println("}")
    outputPrinter.close()
}


defaultTasks += genVersions

compileScala {
    dependsOn genVersions
}

//// Merging Service Files
//shadowJar {
//    mergeServiceFiles()
//}


import org.apache.tools.ant.taskdefs.condition.Os

task distro(dependsOn: nativeImage, type: Zip) {
    classifier = "native-distro-" + getOsName()
    into("libs") {
        from { configurations.runtime.filter { it.getName().contains("ndjson-module") } }
    }
    into("bin") {
        from 'build/graal/'
    }
}


private static String getOsName() {
    String prefix
    if (Os.isFamily(Os.FAMILY_MAC))
        prefix = "osx"
    else if (Os.isFamily(Os.FAMILY_UNIX))
        prefix = "linux"
    else
        prefix = "windows"
    prefix
}

graal {
    windowsVsVarsPath 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat'
    mainClass 'org.mule.weave.dwnative.cli.DataWeaveCLI'
    outputName 'dw'
    javaVersion '11'
    graalVersion graalvmVersion
    option "-H:+ReportExceptionStackTraces"
    option "-J-Xmx3G"
    option "--no-fallback"
    option "--allow-incomplete-classpath"
    option "-H:EnableURLProtocols=http,https"
    option "--initialize-at-run-time=" +
            "io.netty," +
            "org.asynchttpclient," +
            "org.mule.weave.v2.module.http.netty.HttpAsyncClientService," +
            "scala.util.Random," +
            "org.mule.weave.v2.sdk.SPIBasedModuleLoaderProvider\$"
    option "--initialize-at-build-time=" +
            "sun.instrument.InstrumentationImpl," +
            "org.mule.weave.dwnative.initializer.Startup," +
            "org.mule.weave.dwnative.," +
            "org.mule.weave.v2.parser.," +
            "org.mule.weave.v2.codegen.StringCodeWriter," +
            "org.mule.weave.v2.resources.WeaveResourceLoader\$," +
            "org.mule.weave.v2.annotations.," +
            "org.mule.weave.v2.ts.," +
            "org.mule.weave.v2.scope.," +
            "org.mule.weave.v2.scope.," +
            "org.mule.weave.v2.grammar.," +
            "org.mule.weave.v2.sdk.," +
            "org.mule.weave.v2.utils.," +
            "org.mule.weave.v2.versioncheck.," +
            //Parboiled
            "scala.," +
            "org.parboiled2.," +
            "shapeless.syntax."

    //For Runtime execution
//            "org.mule.weave.v2.interpreted.,"+
//            "org.mule.weave.v2.model.values.,"
//            "org.mule.weave.v2.model.types.,"
//            "org.mule.weave.v2.core.functions."
//    option "-H:+TraceClassInitialization"
    option "-H:DeadlockWatchdogInterval=1000"
    option "--report-unsupported-elements-at-runtime"
    option "-H:CompilationExpirationPeriod=0"
    option "--trace-object-instantiation=java.util.Random"
//    option "-H:+DashboardAll"
//    option "-H:DashboardDump=/Users/mdeachaval/labs/palantir/weave-native-library/native-cli/dump"
//    option "-H:+PrintImageObjectTree"
    option "-J-Xmx6G"
}


